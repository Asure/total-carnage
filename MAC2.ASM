*CLICK AN AUDIT COUNTER
*DESTROYS A0
AUDIT	$MACRO	P1
	MOVI	:P1:,A0	
	CALLA	AUD1
	$ENDM
*
*AUDIT A WORD LONG RAM LOCATION
*P1 = AUDIT
*P2 = RAM LOCATION
*DESTROYS A0,A1
AUDITCNT $MACRO	P1,P2
	MOVE	@:P2:,A1,W
	MOVI	:P1:,A0
	CALLA	AUD
	$ENDM
*
*GET A GAME ADJUSTMENT VALUE
*RETURNS ADJUSTMENT VALUE IN A0
ADJUST	$MACRO	P1
	MOVI	:P1:,A0
	CALLA	GET_ADJ
	$ENDM
*CLICK AN AUDIT COUNTER
*DESTROYS A0
AUDIT	$MACRO	P1
	MOVI	:P1:,A0	
	CALLA	AUD1
	$ENDM
*
*AUDIT A WORD LONG RAM LOCATION
*P1 = AUDIT
*P2 = RAM LOCATION
*DESTROYS A0,A1
AUDITCNT $MACRO	P1,P2
	MOVE	@:P2:,A1,W
	MOVI	:P1:,A0
	CALLA	AUD
	$ENDM
*
*GET A GAME ADJUSTMENT VALUE
*RETURNS ADJUSTMENT VALUE IN A0
ADJUST	$MACRO	P1
	MOVI	:P1:,A0
	CALLA	GET_ADJ
	$ENDM
*
*FCALL - FUNCTION CALL WITHOUT USING THE SYSTEM STACK
*	FCALL	ROUTINE, BREG
*
FCALL	$MACRO NAME, BREG
	 MOVI  :NAME:, :BREG:, L
	 EXGPC :BREG:
	$ENDM
*
*FRET - FUNCTION RETURN WITHOUT USING THE SYSTEM STACK
*	FCALL	ROUTINE, BREG
*
FRET	$MACRO BREG
	 EXGPC :BREG:
	$ENDM

