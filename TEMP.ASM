*
*SECURITY EXERCISE TABLE
*
SECBTAB	
	.BYTE	0FH 		;CLEAR THE SUCKER
	.BYTE	0FH 		;CLEAR THE SUCKER
	.BYTE	0FH 		;CLEAR THE SUCKER

	.BYTE	08H		;CLOCK IT
	.BYTE	045H		;READ A 4

	.BYTE	04H		;LOAD SEED
	.BYTE	03H		;LOAD A 3

	.BYTE	08H		;CLOCK IT
	.BYTE	08H		;CLOCK IT
	.BYTE	08H		;CLOCK IT
	.BYTE	0F5H		;READ AN F

	.BYTE	08H		;CLOCK IT
	.BYTE	08H		;CLOCK IT
	.BYTE	0A5H		;READ AN A

	.BYTE	0FFH		;ITS ALL OVER
	.EVEN

**************************************************************************
*								         *
* SECURITY - AND FINALLY ... THERE IS SECURITY!				 *
* B0 = RETURN ADDRESS							 *
* SETS GLOBAL SEC_FLAG TO 1 IF BREECH!					 *
* NOTE: TRASHES A0,A1,A2,A3,A4,A6					 *
*								         *
**************************************************************************
SECURITY
	CLR	A0
	MOVE	A0,@SEC_FLAG,W
	MOVI	SECBTAB,A0
	GETST	A6
	DINT
SECLOOP
	MOVB	*A0,A1	
	ADDK	8,A0
	SLL	24,A1			; STRIP OUT THE CRUD
	SRL	24,A1			
	CMPI	0FFH,A1
	JREQ	SECCHX			; WE ARE DONE
	MOVE	A1,A2
	SLL	8,A1
	MOVI	SECCHIP/2,A3
	SLL	1,A3
	ANDI	00F00H,A1
	MOVE	A1,*A3,W
	CMPI	00500H,A1		;READ IT ?
	JRNE	SECLOOP			;NO READ CYCLE

	MOVE	*A3,A4,W		;CHECK OUT READ DATA
	SLL	16,A4
	SRL	28,A4
	SRL	4,A2
	CMP	A4,A2
	JREQ	SECLOOP
SECERR					;BOGUS SHIT = ERROR
	MOVK	1,A0
	MOVE	A0,@SEC_FLAG,W
SECCHX	
	PUTST	A6
	FRET	B0
